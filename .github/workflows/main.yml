name: Continuous Integration

on:
  push:
    branches:
      - "master"
      - "develop"
    tags:
      - "*"
  pull_request:
    branches:
      - "develop"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_wheels:
    name: wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_BUILD: cp36-* cp37-* cp38-* cp39-*
          CIBW_BEFORE_BUILD: pip install numpy==1.19.* cython==0.29.* setuptools
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {project}/tests
        with:
          output-dir: dist

      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  build_sdist:
    name: sdist on ${{ matrix.os }} with py ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions\setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        env:
          GSTOOLS_BUILD_PARALLEL: 1
        run: |
          python -m pip install --upgrade pip
          pip install coveralls>=3.0.0
          # needed for now, since sdist needs requirements defined in pyporject.toml
          # pip uses isolated builds, where cython is not present afterwards
          # pep517 is not yet available: https://stackoverflow.com/a/63555237/6696397
          pip install -r requirements_setup.txt
          # no build isolation since requirements now installed
          # editable to be compatible with pytest (inplace build)
          pip install --verbose --no-build-isolation --editable .[test]

      - name: Run tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python -m pytest --cov gstools --cov-report term-missing -v tests/
          python -m coveralls --service=github

      - name: Build sdist
        run: |
          python setup.py sdist -d dist

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
        with:
          path: dist/*.tar.gz

  upload_to_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Publish to Test PyPI
        # only if working on master or develop
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        # only if tagged
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
